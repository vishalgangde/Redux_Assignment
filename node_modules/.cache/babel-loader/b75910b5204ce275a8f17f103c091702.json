{"ast":null,"code":"import _objectSpread from \"/home/vishal/userposts/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _regeneratorRuntime from \"/home/vishal/userposts/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/vishal/userposts/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport posts from '../apis/posts';\nimport { SIGN_IN, REGISTER_FORM, POST_LIST, SINGLE_POST_LIST, CREATE_POST, UPDATE_POST, DELETE_POST } from './types';\nimport Axios from 'axios';\nvar header = {\n  \"Content-Type\": \"application/json\"\n};\nexport var signIn = function signIn(formValue) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(dispatch) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                //const response = await posts.post('/jwt-auth/v1/token',{...formValue});\n                axios.post('http://183.182.84.84/restapi/wp-json/jwt-auth/v1/token');\n                console.log('signIn', formValue); // dispatch({ type :  , payload : response.data});\n                //Do some programmatic navigation to\n                //get the user back to the root route\n                //history.push('/'); \n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var RegisterUser = function RegisterUser(formValue) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(dispatch) {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return posts.post('/wp/v2/users/register', _objectSpread({}, formValue));\n\n              case 2:\n                response = _context2.sent;\n                console.log(response.data);\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function (_x2) {\n        return _ref2.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var createpost = function createpost(formValue) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref3 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3(dispatch) {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return posts.post('/wp/v2/posts', _objectSpread({}, formValue));\n\n              case 2:\n                response = _context3.sent;\n                console.log(response);\n                dispatch({\n                  type: CREATE_POST,\n                  payload: response.data\n                });\n\n              case 5:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      return function (_x3) {\n        return _ref3.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var postList = function postList() {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref4 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee4(dispatch) {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return posts.get('/wp/v2/posts', {\n                  header: header\n                });\n\n              case 2:\n                response = _context4.sent;\n                console.log(response.data, \"aaaa\");\n                dispatch({\n                  type: POST_LIST,\n                  payload: response.data\n                });\n\n              case 5:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }));\n\n      return function (_x4) {\n        return _ref4.apply(this, arguments);\n      };\n    }()\n  );\n};\n/* \n    export const SinglePostList = id => async (dispatch) => {\n        const response = await posts.get(`/wp/v2/posts/${id}`);\n        console.log(response);\n        dispatch({type: SINGLE_POST_LISTa, payload: response.data});\n    }; */\n\nexport var UpdatePost = function UpdatePost(id, formValue) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref5 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee5(dispatch) {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.next = 2;\n                return posts.put(\"/wp/v2/posts/\".concat(id), _objectSpread({}, formValue));\n\n              case 2:\n                response = _context5.sent;\n                console.log(response);\n                dispatch({\n                  type: UPDATE_POST,\n                  payload: response.data\n                });\n\n              case 5:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5);\n      }));\n\n      return function (_x5) {\n        return _ref5.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var DeletePost = function DeletePost(id) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref6 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee6(dispatch) {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                _context6.next = 2;\n                return posts.delete(\"/wp/v2/posts/\".concat(id));\n\n              case 2:\n                response = _context6.sent;\n                console.log(response);\n                dispatch({\n                  type: DELETE_POST,\n                  payload: id\n                });\n\n              case 5:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6);\n      }));\n\n      return function (_x6) {\n        return _ref6.apply(this, arguments);\n      };\n    }()\n  );\n};","map":{"version":3,"sources":["/home/vishal/userposts/src/actions/index.js"],"names":["posts","SIGN_IN","REGISTER_FORM","POST_LIST","SINGLE_POST_LIST","CREATE_POST","UPDATE_POST","DELETE_POST","Axios","header","signIn","formValue","dispatch","axios","post","console","log","RegisterUser","response","data","createpost","type","payload","postList","get","UpdatePost","id","put","DeletePost","delete"],"mappings":"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","sourcesContent":["import posts from '../apis/posts';\nimport { SIGN_IN,\n         REGISTER_FORM,\n         POST_LIST,\n         SINGLE_POST_LIST,\n         CREATE_POST,\n         UPDATE_POST,\n         DELETE_POST\n        } from './types'\nimport Axios from 'axios';\n\n        const header = {\n            \"Content-Type\" : \"application/json\"\n          } \n\nexport const signIn = formValue => async (dispatch) => {\n  \n    //const response = await posts.post('/jwt-auth/v1/token',{...formValue});\n    axios.post('http://183.182.84.84/restapi/wp-json/jwt-auth/v1/token')\n    console.log('signIn',formValue);\n   // dispatch({ type :  , payload : response.data});\n    //Do some programmatic navigation to\n    //get the user back to the root route\n    //history.push('/'); \n        \n    };\n\n    export const RegisterUser = formValue => async (dispatch) => {\n        const response = await posts.post('/wp/v2/users/register',{...formValue});\n        console.log(response.data);\n\n    };\n\n    export const createpost = formValue => async (dispatch) => {\n        const response = await posts.post('/wp/v2/posts',{...formValue});\n        console.log(response);\n        dispatch({type: CREATE_POST, payload: response.data});\n    };\n\n    export const postList = () => async (dispatch) => {\n        const response = await posts.get('/wp/v2/posts',{header:header}) ;\n        console.log(response.data,\"aaaa\");\n        dispatch({type:POST_LIST, payload : response.data});\n    };\n/* \n    export const SinglePostList = id => async (dispatch) => {\n        const response = await posts.get(`/wp/v2/posts/${id}`);\n        console.log(response);\n        dispatch({type: SINGLE_POST_LISTa, payload: response.data});\n    }; */\n\n        export const UpdatePost = (id,formValue) => async (dispatch) => {\n        const response = await posts.put(`/wp/v2/posts/${id}`,{...formValue});\n        console.log(response);\n        dispatch({type:UPDATE_POST , payload: response.data});\n    };\n\n    export const DeletePost = (id) => async (dispatch) => {\n        const response = await posts.delete(`/wp/v2/posts/${id}`);\n        console.log(response);\n        dispatch({type:DELETE_POST, payload: id});\n    };\n\n\n\n    "]},"metadata":{},"sourceType":"module"}