{"ast":null,"code":"import _classCallCheck from \"/home/vishal/userposts/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/vishal/userposts/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/vishal/userposts/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/vishal/userposts/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/vishal/userposts/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/vishal/userposts/src/components/SignIn.js\";\nimport React from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport { signIn } from '../actions';\nimport { connect } from 'http2';\n\nvar SignIn =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(SignIn, _React$Component);\n\n  function SignIn() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, SignIn);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(SignIn)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.renderInput = function (_ref) {\n      var input = _ref.input,\n          type = _ref.type,\n          label = _ref.label,\n          meta = _ref.meta;\n      var className = \"field \".concat(meta.error && meta.touched ? 'error' : '');\n      return React.createElement(\"div\", {\n        className: className,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, label), React.createElement(\"input\", Object.assign({}, input, {\n        type: type,\n        autoComplete: \"off\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      })), _this.renderError(meta));\n    };\n\n    _this.onSubmit = function (formValues) {\n      console.log(formValues);\n\n      _this.props.signIn(formValues);\n    };\n\n    return _this;\n  }\n\n  _createClass(SignIn, [{\n    key: \"renderError\",\n    value: function renderError(_ref2) {\n      var touched = _ref2.touched,\n          error = _ref2.error;\n\n      //console.log({error});\n      //console.log({touched})\n      if (touched && error) {\n        return React.createElement(\"div\", {\n          className: \"ui error message\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 13\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"header\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 14\n          },\n          __self: this\n        }, error));\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      //console.log(this.props);\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, \"Log-in Here\"), React.createElement(\"form\", {\n        onSubmit: this.props.handleSubmit(this.onSubmit),\n        className: \"ui form error\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(Field, {\n        name: \"username\",\n        type: \"text\",\n        component: this.renderInput,\n        label: \"UserName\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }), React.createElement(Field, {\n        name: \"password\",\n        type: \"password\",\n        component: this.renderInput,\n        label: \"Password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        className: \"ui button primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, \"Submit\")));\n    }\n  }]);\n\n  return SignIn;\n}(React.Component);\n\nvar validate = function validate(formValues) {\n  var error = {};\n\n  if (!formValues.username) {\n    error.username = 'Must enter valid user name';\n  }\n\n  if (!formValues.password) {\n    error.password = 'Must enter valid password';\n  }\n\n  return error;\n};\n\nvar logVal = reduxForm({\n  form: 'SignIn',\n  validate: validate\n})(SignIn);\nexport default connect(null, {})();","map":{"version":3,"sources":["/home/vishal/userposts/src/components/SignIn.js"],"names":["React","Field","reduxForm","signIn","connect","SignIn","renderInput","input","type","label","meta","className","error","touched","renderError","onSubmit","formValues","console","log","props","handleSubmit","Component","validate","username","password","logVal","form"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Field, reduxForm} from 'redux-form';\nimport { signIn } from '../actions';\nimport { connect } from 'http2';\n\nclass SignIn extends React.Component{\n    renderError({touched,error}){\n        //console.log({error});\n        //console.log({touched})\n        \n        if(touched && error){\n            return(\n                <div className=\"ui error message\">\n                    <div className=\"header\">{error}</div>\n                </div>\n            );\n        }\n    }\n\n    renderInput = ({input,type,label,meta}) => {\n        const className = `field ${meta.error && meta.touched ? 'error' : ''}`;\n        \n        return(\n                <div className={className}>\n                    <label>{label}</label>\n                    <input {...input} type={type} autoComplete=\"off\" />\n                    {this.renderError(meta)}\n                </div>\n        );\n        \n    }\n\n    onSubmit= (formValues)=>{\n        console.log(formValues);\n        this.props.signIn(formValues)\n        \n    }\n\n    render(){\n        //console.log(this.props);\n        return(\n            <div>\n                <h2>Log-in Here</h2 >\n            <form onSubmit={this.props.handleSubmit(this.onSubmit)} className=\"ui form error\">\n                <Field  \n                    name=\"username\"\n                    type=\"text\"  \n                    component={this.renderInput} \n                    label=\"UserName\" \n                />\n                <Field  \n                    name=\"password\"\n                    type=\"password\"  \n                    component={this.renderInput} \n                    label=\"Password\" \n                />\n                <button className=\"ui button primary\">Submit</button>\n                </form>\n                </div>\n\n        );\n    }\n}\n\nconst validate = (formValues) => {\n    const error = {};\n\n    if(!formValues.username){\n        error.username = 'Must enter valid user name';\n    }\n\n    if(!formValues.password){\n        error.password = 'Must enter valid password';\n    }\n    return error;\n\n}\nconst logVal= reduxForm({\n    form: 'SignIn',\n    validate\n})(SignIn);\n\nexport default connect(null,{})()"]},"metadata":{},"sourceType":"module"}