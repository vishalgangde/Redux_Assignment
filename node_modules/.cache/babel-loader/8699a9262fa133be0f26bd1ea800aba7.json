{"ast":null,"code":"import _regeneratorRuntime from \"/home/vishal/userposts/node_modules/@babel/runtime/regenerator\";\nimport _objectSpread from \"/home/vishal/userposts/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _asyncToGenerator from \"/home/vishal/userposts/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport posts from '../apis/posts';\nimport post1 from '../apis/post1';\nimport history from '../history';\nimport { SIGN_OUT, POST_LIST, SINGLE_POST_LIST, UPDATE_USER, CREATE_POST, EDIT_POST, DELETE_POST } from './types'; //import history from '../history';\n//import {toaster} from 'react-redux-toastr';\n//const toastrSuccessFunction = (title,msg) => toastr.success(title,msg)\n//const toastrWarningFunction = (title,msg) => toastr.error(title,msg) \n\nvar header = {\n  \"Content-Type\": \"application/json\",\n  \"Authorization\": \"Bearer \".concat(localStorage.getItem(\"authToken\"))\n};\nexport var signInAction = function signInAction(formValue) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(dispatch) {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                console.log(formValue);\n                _context.prev = 1;\n                _context.next = 4;\n                return posts.post('/jwt-auth/v1/token', _objectSpread({}, formValue));\n\n              case 4:\n                response = _context.sent;\n                console.log(response);\n                localStorage.setItem(\"authToken\", response.data.token);\n                localStorage.setItem(\"displayname\", response.data.user_display_name);\n                localStorage.setItem(\"userId\", response.data.user_id);\n                console.log('renderAdminList', localStorage.getItem('userId'));\n                history.push('/');\n                _context.next = 16;\n                break;\n\n              case 13:\n                _context.prev = 13;\n                _context.t0 = _context[\"catch\"](1);\n                console.log('renderAdminList', localStorage.getItem('userId')); //toastrSuccessFunction(`SignIn Successful`,`${formValues.username}`)\n\n              case 16:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[1, 13]]);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }()\n  );\n}; //log out action creator with local storage and toaster\n\nexport var signOutAction = function signOutAction() {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(dispatch) {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                return _context2.abrupt(\"return\", {\n                  type: SIGN_OUT\n                });\n\n              case 1:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function (_x2) {\n        return _ref2.apply(this, arguments);\n      };\n    }()\n  );\n}; //registration action creator with api calling with post method\n\nexport var RegisterUserAction = function RegisterUserAction(formValue) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref3 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3(dispatch) {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                console.log(formValue);\n                _context3.prev = 1;\n                _context3.next = 4;\n                return posts.post('/wp/v2/users/register', _objectSpread({}, formValue));\n\n              case 4:\n                response = _context3.sent;\n                //toastrSuccessFunction(`${response.data.message}`,`${formValues.username}`)\n                console.log(response.data, 'RegisterUser');\n                _context3.next = 10;\n                break;\n\n              case 8:\n                _context3.prev = 8;\n                _context3.t0 = _context3[\"catch\"](1);\n\n              case 10:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, null, [[1, 8]]);\n      }));\n\n      return function (_x3) {\n        return _ref3.apply(this, arguments);\n      };\n    }()\n  );\n}; //post-create action creator with post method \n\nexport var createPostAction = function createPostAction(formValue) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref4 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee4(dispatch, getState) {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return post1.post('/wp/v2/posts', _objectSpread({}, formValue));\n\n              case 2:\n                response = _context4.sent;\n                console.log(response);\n                dispatch({\n                  type: CREATE_POST,\n                  payload: response.data\n                });\n\n              case 5:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }));\n\n      return function (_x4, _x5) {\n        return _ref4.apply(this, arguments);\n      };\n    }()\n  );\n}; //list of all post action creator with get method \n\nexport var postListAction = function postListAction() {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref5 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee5(dispatch) {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.next = 2;\n                return posts.get('/wp/v2/posts');\n\n              case 2:\n                response = _context5.sent;\n                console.log(response.data, \"postList\");\n                dispatch({\n                  type: POST_LIST,\n                  payload: response.data\n                });\n\n              case 5:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5);\n      }));\n\n      return function (_x6) {\n        return _ref5.apply(this, arguments);\n      };\n    }()\n  );\n}; //single post action creator with get method\n\nexport var SinglePostListAction = function SinglePostListAction(id) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref6 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee6(dispatch) {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                _context6.next = 2;\n                return post1.get(\"/wp/v2/posts/\".concat(id));\n\n              case 2:\n                response = _context6.sent;\n                console.log(response);\n                dispatch({\n                  type: SINGLE_POST_LIST,\n                  payload: response.data\n                });\n\n              case 5:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6);\n      }));\n\n      return function (_x7) {\n        return _ref6.apply(this, arguments);\n      };\n    }()\n  );\n}; //edit-post action creator with put method \n\nexport var editPostAction = function editPostAction(id, formValue) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref7 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee7(dispatch) {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                _context7.next = 2;\n                return post1.put(\"/wp/v2/posts/\".concat(id, \" \"), _objectSpread({}, formValue));\n\n              case 2:\n                response = _context7.sent;\n                console.log(\"EditPost\", response);\n                dispatch({\n                  type: EDIT_POST,\n                  payload: response.data\n                });\n\n              case 5:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7);\n      }));\n\n      return function (_x8) {\n        return _ref7.apply(this, arguments);\n      };\n    }()\n  );\n}; //delete-post action creator with delete method \n\nexport var deletePostAction = function deletePostAction(id) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref8 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee8(dispatch) {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                _context8.next = 2;\n                return post1.delete(\"/wp/v2/posts/\".concat(id));\n\n              case 2:\n                response = _context8.sent;\n                console.log(\"DeletePostid\", response);\n                dispatch({\n                  type: DELETE_POST,\n                  payload: id\n                });\n\n              case 5:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8);\n      }));\n\n      return function (_x9) {\n        return _ref8.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var userUpdateAction = function userUpdateAction(id, formValue) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref9 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee9(dispatch) {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee9$(_context9) {\n          while (1) {\n            switch (_context9.prev = _context9.next) {\n              case 0:\n                _context9.next = 2;\n                return posts.put(\"/wp/v2/users/\".concat(id), _objectSpread({}, formValue));\n\n              case 2:\n                response = _context9.sent;\n                console.log(\"userUpdateAction\", response);\n                dispatch({\n                  type: UPDATE_USER,\n                  payload: id\n                });\n\n              case 5:\n              case \"end\":\n                return _context9.stop();\n            }\n          }\n        }, _callee9);\n      }));\n\n      return function (_x10) {\n        return _ref9.apply(this, arguments);\n      };\n    }()\n  );\n};","map":{"version":3,"sources":["/home/vishal/userposts/src/actions/index.js"],"names":["posts","post1","history","SIGN_OUT","POST_LIST","SINGLE_POST_LIST","UPDATE_USER","CREATE_POST","EDIT_POST","DELETE_POST","header","localStorage","getItem","signInAction","formValue","dispatch","console","log","post","response","setItem","data","token","user_display_name","user_id","push","signOutAction","type","RegisterUserAction","createPostAction","getState","payload","postListAction","get","SinglePostListAction","id","editPostAction","put","deletePostAction","delete","userUpdateAction"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,eAAlB;AACA,OAAOC,KAAP,MAAkB,eAAlB;AACA,OAAOC,OAAP,MAAoB,YAApB;AAGA,SACIC,QADJ,EAEIC,SAFJ,EAGIC,gBAHJ,EAIIC,WAJJ,EAKIC,WALJ,EAMIC,SANJ,EAOIC,WAPJ,QASO,SATP,C,CAUA;AACA;AAEA;AACA;;AACA,IAAMC,MAAM,GAAG;AACX,kBAAiB,kBADN;AAEX,oCAA4BC,YAAY,CAACC,OAAb,CAAqB,WAArB,CAA5B;AAFW,CAAf;AAQA,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAe,iBAAOC,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACvCC,gBAAAA,OAAO,CAACC,GAAR,CAAYH,SAAZ;AADuC;AAAA;AAAA,uBAKPd,KAAK,CAACkB,IAAN,CAAW,oBAAX,oBAAoCJ,SAApC,EALO;;AAAA;AAKzBK,gBAAAA,QALyB;AAM/BH,gBAAAA,OAAO,CAACC,GAAR,CAAYE,QAAZ;AACAR,gBAAAA,YAAY,CAACS,OAAb,CAAqB,WAArB,EAAiCD,QAAQ,CAACE,IAAT,CAAcC,KAA/C;AACAX,gBAAAA,YAAY,CAACS,OAAb,CAAqB,aAArB,EAAmCD,QAAQ,CAACE,IAAT,CAAcE,iBAAjD;AACAZ,gBAAAA,YAAY,CAACS,OAAb,CAAqB,QAArB,EAA8BD,QAAQ,CAACE,IAAT,CAAcG,OAA5C;AACAR,gBAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA8BN,YAAY,CAACC,OAAb,CAAqB,QAArB,CAA9B;AACAV,gBAAAA,OAAO,CAACuB,IAAR,CAAa,GAAb;AAX+B;AAAA;;AAAA;AAAA;AAAA;AAe/BT,gBAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA8BN,YAAY,CAACC,OAAb,CAAqB,QAArB,CAA9B,EAf+B,CAgB/B;;AAhB+B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAf;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAArB,C,CAsBP;;AACA,OAAO,IAAMc,aAAa,GAAG,SAAhBA,aAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAM,kBAAOX,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA,kDACzB;AACFY,kBAAAA,IAAI,EAAExB;AADJ,iBADyB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAN;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAtB,C,CAKP;;AACA,OAAO,IAAMyB,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAd,SAAS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAI,kBAAOC,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAC3CC,gBAAAA,OAAO,CAACC,GAAR,CAAYH,SAAZ;AAD2C;AAAA;AAAA,uBAGZd,KAAK,CAACkB,IAAN,CAAW,uBAAX,oBAAyCJ,SAAzC,EAHY;;AAAA;AAG7BK,gBAAAA,QAH6B;AAInC;AACAH,gBAAAA,OAAO,CAACC,GAAR,CAAYE,QAAQ,CAACE,IAArB,EAA0B,cAA1B;AALmC;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAJ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAApC,C,CAeP;;AACA,OAAO,IAAMQ,gBAAgB,GAAG,SAAnBA,gBAAmB,CAAAf,SAAS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAI,kBAAOC,QAAP,EAAgBe,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAEV7B,KAAK,CAACiB,IAAN,CAAW,cAAX,oBAAgCJ,SAAhC,EAFU;;AAAA;AAE3BK,gBAAAA,QAF2B;AAGjCH,gBAAAA,OAAO,CAACC,GAAR,CAAYE,QAAZ;AACAJ,gBAAAA,QAAQ,CAAC;AAAEY,kBAAAA,IAAI,EAAEpB,WAAR;AAAqBwB,kBAAAA,OAAO,EAAEZ,QAAQ,CAACE;AAAvC,iBAAD,CAAR;;AAJiC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAJ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAlC,C,CAQP;;AACA,OAAO,IAAMW,cAAc,GAAG,SAAjBA,cAAiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAM,kBAAOjB,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAEDf,KAAK,CAACiC,GAAN,CAAU,cAAV,CAFC;;AAAA;AAElBd,gBAAAA,QAFkB;AAGxBH,gBAAAA,OAAO,CAACC,GAAR,CAAYE,QAAQ,CAACE,IAArB,EAA2B,UAA3B;AACAN,gBAAAA,QAAQ,CAAC;AAAEY,kBAAAA,IAAI,EAAEvB,SAAR;AAAmB2B,kBAAAA,OAAO,EAAEZ,QAAQ,CAACE;AAArC,iBAAD,CAAR;;AAJwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAN;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAvB,C,CAQN;;AACD,OAAO,IAAMa,oBAAoB,GAAG,SAAvBA,oBAAuB,CAAAC,EAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAI,kBAAOpB,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACPd,KAAK,CAACgC,GAAN,wBAA0BE,EAA1B,EADO;;AAAA;AACxBhB,gBAAAA,QADwB;AAE9BH,gBAAAA,OAAO,CAACC,GAAR,CAAYE,QAAZ;AACAJ,gBAAAA,QAAQ,CAAC;AAACY,kBAAAA,IAAI,EAAEtB,gBAAP;AAAyB0B,kBAAAA,OAAO,EAAEZ,QAAQ,CAACE;AAA3C,iBAAD,CAAR;;AAH8B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAJ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA/B,C,CAOP;;AACA,OAAO,IAAMe,cAAc,GAAG,SAAjBA,cAAiB,CAACD,EAAD,EAAIrB,SAAJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAkB,kBAAOC,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACbd,KAAK,CAACoC,GAAN,wBAA0BF,EAA1B,0BAAoCrB,SAApC,EADa;;AAAA;AAC9BK,gBAAAA,QAD8B;AAEpCH,gBAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAuBE,QAAvB;AACAJ,gBAAAA,QAAQ,CAAC;AAAEY,kBAAAA,IAAI,EAAEnB,SAAR;AAAmBuB,kBAAAA,OAAO,EAAEZ,QAAQ,CAACE;AAArC,iBAAD,CAAR;;AAHoC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAlB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAvB,C,CAOP;;AACA,OAAO,IAAMiB,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACH,EAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAQ,kBAAOpB,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACLd,KAAK,CAACsC,MAAN,wBAA6BJ,EAA7B,EADK;;AAAA;AACtBhB,gBAAAA,QADsB;AAE5BH,gBAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA2BE,QAA3B;AACAJ,gBAAAA,QAAQ,CAAC;AAAEY,kBAAAA,IAAI,EAAElB,WAAR;AAAqBsB,kBAAAA,OAAO,EAAEI;AAA9B,iBAAD,CAAR;;AAH4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAR;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAzB;AAOP,OAAO,IAAMK,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACL,EAAD,EAAIrB,SAAJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAkB,kBAAOC,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACff,KAAK,CAACqC,GAAN,wBAA0BF,EAA1B,qBAAmCrB,SAAnC,EADe;;AAAA;AAChCK,gBAAAA,QADgC;AAEtCH,gBAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAA+BE,QAA/B;AACAJ,gBAAAA,QAAQ,CAAC;AAACY,kBAAAA,IAAI,EAAErB,WAAP;AAAoByB,kBAAAA,OAAO,EAAGI;AAA9B,iBAAD,CAAR;;AAHsC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAlB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAzB","sourcesContent":["import posts from '../apis/posts';\nimport post1 from '../apis/post1';\nimport history from '../history' \n\n\nimport {\n    SIGN_OUT,\n    POST_LIST,\n    SINGLE_POST_LIST,\n    UPDATE_USER,\n    CREATE_POST,\n    EDIT_POST,\n    DELETE_POST,\n    \n} from './types'\n//import history from '../history';\n//import {toaster} from 'react-redux-toastr';\n\n//const toastrSuccessFunction = (title,msg) => toastr.success(title,msg)\n//const toastrWarningFunction = (title,msg) => toastr.error(title,msg) \nconst header = {\n    \"Content-Type\" : \"application/json\",\n    \"Authorization\" : `Bearer ${localStorage.getItem(\"authToken\")}`\n\n}\n\n\n\nexport const signInAction = (formValue) => async (dispatch) => {\n    console.log(formValue)\n\n        try{\n            //sign api calling with post method also use local storage and toaster\n            const response  = await posts.post('/jwt-auth/v1/token',{...formValue});\n            console.log(response);\n            localStorage.setItem(\"authToken\",response.data.token);\n            localStorage.setItem(\"displayname\",response.data.user_display_name);\n            localStorage.setItem(\"userId\",response.data.user_id);\n            console.log('renderAdminList',localStorage.getItem('userId'));\n            history.push('/');\n        \n        }\n        catch(error){\n            console.log('renderAdminList',localStorage.getItem('userId'));\n            //toastrSuccessFunction(`SignIn Successful`,`${formValues.username}`)\n        }\n}\n       \n      \n      \n//log out action creator with local storage and toaster\nexport const signOutAction = () => async (dispatch) =>  {\n    return{\n        type: SIGN_OUT\n    };\n};\n//registration action creator with api calling with post method\nexport const RegisterUserAction = formValue => async (dispatch) => {\n    console.log(formValue)\n        try{\n            const response = await posts.post('/wp/v2/users/register', { ...formValue });\n            //toastrSuccessFunction(`${response.data.message}`,`${formValues.username}`)\n            console.log(response.data,'RegisterUser');\n        }\n    \n\n        catch(error){\n            //toastrWarningFunction(`Registeration Failed`,`${formValues.username}`);\n        }\n\n};\n\n//post-create action creator with post method \nexport const createPostAction = formValue => async (dispatch,getState) => {\n    //{user_id} = getState.data()\n            const response = await post1.post('/wp/v2/posts', { ...formValue });\n            console.log(response);\n            dispatch({ type: CREATE_POST, payload: response.data });\n};\n\n\n//list of all post action creator with get method \nexport const postListAction = () => async (dispatch) => {\n    //console.log(header)\n            const response = await posts.get('/wp/v2/posts');\n            console.log(response.data, \"postList\");\n            dispatch({ type: POST_LIST, payload: response.data });\n};\n\n\n //single post action creator with get method\nexport const SinglePostListAction = id => async (dispatch) => {\n            const response = await post1.get(`/wp/v2/posts/${id}`);\n            console.log(response);\n            dispatch({type: SINGLE_POST_LIST, payload: response.data});\n}; \n\n\n//edit-post action creator with put method \nexport const editPostAction = (id,formValue) => async (dispatch) => {\n            const response = await post1.put(`/wp/v2/posts/${id} `,{...formValue});\n            console.log(\"EditPost\",response);\n            dispatch({ type: EDIT_POST, payload: response.data });\n};\n\n\n//delete-post action creator with delete method \nexport const deletePostAction = (id) => async (dispatch) => {\n            const response = await post1.delete(`/wp/v2/posts/${id}`);\n            console.log(\"DeletePostid\",response);\n            dispatch({ type: DELETE_POST, payload: id });\n};\n\n\nexport const userUpdateAction = (id,formValue) => async (dispatch) => {\n            const response = await posts.put(`/wp/v2/users/${id}`,{...formValue});\n            console.log(\"userUpdateAction\",response);\n            dispatch({type: UPDATE_USER, payload : id});\n};\n\n\n"]},"metadata":{},"sourceType":"module"}