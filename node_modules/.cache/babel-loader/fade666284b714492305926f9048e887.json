{"ast":null,"code":"import _regeneratorRuntime from \"/home/vishal/userposts/node_modules/@babel/runtime/regenerator\";\nimport _objectSpread from \"/home/vishal/userposts/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _asyncToGenerator from \"/home/vishal/userposts/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport posts from '../apis/posts';\nimport { SIGN_IN, REGISTER_FORM, POST_LIST, SINGLE_POST_LIST, CREATE_POST, UPDATE_POST, DELETE_POST } from './types';\nvar headers = {\n  \"Content-Type\": \"application/json\"\n};\nexport var signIn = function signIn(formValue, callback) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(dispatch) {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return posts.post('/jwt-auth/v1/token', _objectSpread({}, formValue));\n\n              case 2:\n                response = _context.sent;\n                // axios.post('http://10.10.10.224/restapi/wp-json/jwt-auth/v1/token', formValue, { headers })\n                console.log('signIn', response.data); // console.log('signIn', formValue);\n                // dispatch({ type :  , payload : response.data});\n                //Do some programmatic navigation to\n                //get the user back to the root route\n                //history.push('/'); \n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var RegisterUser = function RegisterUser(formValue) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(dispatch) {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return posts.post('/wp/v2/users/register', _objectSpread({}, formValue));\n\n              case 2:\n                response = _context2.sent;\n                console.log(response.data);\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function (_x2) {\n        return _ref2.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var createpost = function createpost(formValue) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref3 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3(dispatch) {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return posts.post('/wp/v2/posts', _objectSpread({}, formValue));\n\n              case 2:\n                response = _context3.sent;\n                console.log(response);\n                dispatch({\n                  type: CREATE_POST,\n                  payload: response.data\n                });\n\n              case 5:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      return function (_x3) {\n        return _ref3.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var postList = function postList() {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref4 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee4(dispatch) {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return posts.get('/wp/v2/posts');\n\n              case 2:\n                response = _context4.sent;\n                console.log(response.data, \"aaaa\");\n                dispatch({\n                  type: POST_LIST,\n                  payload: response.data\n                });\n\n              case 5:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }));\n\n      return function (_x4) {\n        return _ref4.apply(this, arguments);\n      };\n    }()\n  );\n};\n/* \n    export const SinglePostList = id => async (dispatch) => {\n        const response = await posts.get(`/wp/v2/posts/${id}`);\n        console.log(response);\n        dispatch({type: SINGLE_POST_LISTa, payload: response.data});\n    }; */\n\nexport var UpdatePost = function UpdatePost(id, formValue) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref5 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee5(dispatch) {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.next = 2;\n                return posts.put(\"/wp/v2/posts/\".concat(id), _objectSpread({}, formValue));\n\n              case 2:\n                response = _context5.sent;\n                console.log(response);\n                dispatch({\n                  type: UPDATE_POST,\n                  payload: response.data\n                });\n\n              case 5:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5);\n      }));\n\n      return function (_x5) {\n        return _ref5.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var DeletePost = function DeletePost(id) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref6 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee6(dispatch) {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                _context6.next = 2;\n                return posts.delete(\"/wp/v2/posts/\".concat(id));\n\n              case 2:\n                response = _context6.sent;\n                console.log(response);\n                dispatch({\n                  type: DELETE_POST,\n                  payload: id\n                });\n\n              case 5:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6);\n      }));\n\n      return function (_x6) {\n        return _ref6.apply(this, arguments);\n      };\n    }()\n  );\n};","map":{"version":3,"sources":["/home/vishal/userposts/src/actions/index.js"],"names":["posts","SIGN_IN","REGISTER_FORM","POST_LIST","SINGLE_POST_LIST","CREATE_POST","UPDATE_POST","DELETE_POST","headers","signIn","formValue","callback","dispatch","post","response","console","log","data","RegisterUser","createpost","type","payload","postList","get","UpdatePost","id","put","DeletePost","delete"],"mappings":"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","sourcesContent":["import posts from '../apis/posts';\n\nimport {\n    SIGN_IN,\n    REGISTER_FORM,\n    POST_LIST,\n    SINGLE_POST_LIST,\n    CREATE_POST,\n    UPDATE_POST,\n    DELETE_POST\n} from './types'\n\n\nconst headers = {\n    \"Content-Type\": \"application/json\"\n}\n\nexport const signIn = (formValue, callback) => async (dispatch) => {\n\n    const response = await posts.post('/jwt-auth/v1/token',{...formValue});\n   // axios.post('http://10.10.10.224/restapi/wp-json/jwt-auth/v1/token', formValue, { headers })\n       \n            console.log('signIn', response.data);\n            \n    // console.log('signIn', formValue);\n    // dispatch({ type :  , payload : response.data});\n    //Do some programmatic navigation to\n    //get the user back to the root route\n    //history.push('/'); \n\n};\n\nexport const RegisterUser = formValue => async (dispatch) => {\n    const response = await posts.post('/wp/v2/users/register', { ...formValue });\n    console.log(response.data);\n\n};\n\nexport const createpost = formValue => async (dispatch) => {\n    const response = await posts.post('/wp/v2/posts', { ...formValue });\n    console.log(response);\n    dispatch({ type: CREATE_POST, payload: response.data });\n};\n\nexport const postList = () => async (dispatch) => {\n    //console.log(header)\n    const response = await posts.get('/wp/v2/posts');\n    console.log(response.data, \"aaaa\");\n    dispatch({ type: POST_LIST, payload: response.data });\n};\n/* \n    export const SinglePostList = id => async (dispatch) => {\n        const response = await posts.get(`/wp/v2/posts/${id}`);\n        console.log(response);\n        dispatch({type: SINGLE_POST_LISTa, payload: response.data});\n    }; */\n\nexport const UpdatePost = (id, formValue) => async (dispatch) => {\n    const response = await posts.put(`/wp/v2/posts/${id}`, { ...formValue });\n    console.log(response);\n    dispatch({ type: UPDATE_POST, payload: response.data });\n};\n\nexport const DeletePost = (id) => async (dispatch) => {\n    const response = await posts.delete(`/wp/v2/posts/${id}`);\n    console.log(response);\n    dispatch({ type: DELETE_POST, payload: id });\n};\n\n\n\n"]},"metadata":{},"sourceType":"module"}