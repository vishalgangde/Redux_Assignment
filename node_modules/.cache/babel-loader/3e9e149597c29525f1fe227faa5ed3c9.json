{"ast":null,"code":"import _classCallCheck from \"/home/vishal/userposts/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/vishal/userposts/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/vishal/userposts/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/vishal/userposts/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/vishal/userposts/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/vishal/userposts/src/components/CreatePost.js\";\nimport React from 'react';\nimport { Field, reduxForm } from 'redux-form';\n\nvar CreatePost =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(CreatePost, _React$Component);\n\n  function CreatePost() {\n    _classCallCheck(this, CreatePost);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(CreatePost).apply(this, arguments));\n  }\n\n  _createClass(CreatePost, [{\n    key: \"renderInput\",\n    value: function renderInput(_ref) {\n      var input = _ref.input,\n          label = _ref.label;\n      return React.createElement(\"div\", {\n        className: \"field\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 9\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 10\n        },\n        __self: this\n      }, label), React.createElement(\"input\", Object.assign({}, input, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 11\n        },\n        __self: this\n      })));\n    }\n  }, {\n    key: \"onSubmit\",\n    value: function onSubmit(formValues) {\n      console.log(formValues);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      console.log(this.props);\n      return (//<div>Create Post</div>\n        React.createElement(\"form\", {\n          onSubmit: this.props.handleSubmit(this.onSubmit),\n          className: \"ui form\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 26\n          },\n          __self: this\n        }, React.createElement(Field, {\n          name: \"Title\",\n          component: this.renderInput,\n          label: \"Enter Title\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27\n          },\n          __self: this\n        }), React.createElement(Field, {\n          name: \"Description\",\n          component: this.renderInput,\n          label: \"Enter Description\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28\n          },\n          __self: this\n        }), React.createElement(Field, {\n          name: \"Status\",\n          component: this.renderInput,\n          label: \"Status\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29\n          },\n          __self: this\n        }), React.createElement(\"button\", {\n          className: \"ui button primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30\n          },\n          __self: this\n        }, \"Submit\"))\n      );\n    }\n  }]);\n\n  return CreatePost;\n}(React.Component);\n\nvar validate = function validate(formValues) {\n  var error = {};\n\n  if (!formValues.Title) {\n    error.Title = 'Please Enter a title';\n  }\n\n  if (!formValues.Description) {\n    error.Description = 'Please Enter a description';\n  }\n\n  if (!formValues.Status) {\n    error.Status = 'Please E';\n  }\n};\n\nexport default reduxForm({\n  form: 'CreatePost'\n})(CreatePost);","map":{"version":3,"sources":["/home/vishal/userposts/src/components/CreatePost.js"],"names":["React","Field","reduxForm","CreatePost","input","label","formValues","console","log","props","handleSubmit","onSubmit","renderInput","Component","validate","error","Title","Description","Status","form"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAeC,SAAf,QAA+B,YAA/B;;IAEMC,U;;;;;;;;;;;;;sCAEwB;AAAA,UAAbC,KAAa,QAAbA,KAAa;AAAA,UAAPC,KAAO,QAAPA,KAAO;AAEtB,aACQ;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAQA,KAAR,CADJ,EAEI,+CAAWD,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAFJ,CADR;AAOH;;;6BAEQE,U,EAAW;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,UAAZ;AAEH;;;6BAEO;AACJC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAjB;AACA,aACI;AACA;AAAM,UAAA,QAAQ,EAAE,KAAKA,KAAL,CAAWC,YAAX,CAAwB,KAAKC,QAA7B,CAAhB;AAAwD,UAAA,SAAS,EAAC,SAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,KAAD;AAAO,UAAA,IAAI,EAAC,OAAZ;AAAoB,UAAA,SAAS,EAAE,KAAKC,WAApC;AAAiD,UAAA,KAAK,EAAC,aAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,EAEI,oBAAC,KAAD;AAAO,UAAA,IAAI,EAAC,aAAZ;AAA0B,UAAA,SAAS,EAAE,KAAKA,WAA1C;AAAuD,UAAA,KAAK,EAAC,mBAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ,EAGI,oBAAC,KAAD;AAAO,UAAA,IAAI,EAAC,QAAZ;AAAqB,UAAA,SAAS,EAAE,KAAKA,WAArC;AAAkD,UAAA,KAAK,EAAC,QAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAHJ,EAII;AAAQ,UAAA,SAAS,EAAC,mBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJJ;AAFJ;AAUH;;;;EA9BoBZ,KAAK,CAACa,S;;AAiC/B,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACR,UAAD,EAAgB;AAC7B,MAAMS,KAAK,GAAG,EAAd;;AAEA,MAAG,CAACT,UAAU,CAACU,KAAf,EAAqB;AACjBD,IAAAA,KAAK,CAACC,KAAN,GAAc,sBAAd;AACH;;AAED,MAAG,CAACV,UAAU,CAACW,WAAf,EAA2B;AACvBF,IAAAA,KAAK,CAACE,WAAN,GAAoB,4BAApB;AACH;;AAED,MAAG,CAACX,UAAU,CAACY,MAAf,EAAsB;AAClBH,IAAAA,KAAK,CAACG,MAAN,GAAe,UAAf;AACH;AAEJ,CAfD;;AAiBA,eAAehB,SAAS,CAAC;AACrBiB,EAAAA,IAAI,EAAG;AADc,CAAD,CAAT,CAEZhB,UAFY,CAAf","sourcesContent":["import React from 'react';\nimport { Field,reduxForm} from 'redux-form';\n\nclass CreatePost extends React.Component{\n\n    renderInput({input,label}){\n\n        return(\n                <div className=\"field\">\n                    <label>{label}</label>\n                    <input {...input}/>\n            </div>\n        );\n        \n    }\n\n    onSubmit(formValues){\n        console.log(formValues);\n        \n    }\n\n    render(){\n        console.log(this.props);\n        return(\n            //<div>Create Post</div>\n            <form onSubmit={this.props.handleSubmit(this.onSubmit)} className=\"ui form\">\n                <Field name=\"Title\" component={this.renderInput} label=\"Enter Title\" />\n                <Field name=\"Description\" component={this.renderInput} label=\"Enter Description\" />\n                <Field name=\"Status\" component={this.renderInput} label=\"Status\" />\n                <button className=\"ui button primary\">Submit</button>\n            </form>\n            \n        );\n    }\n}\n\nconst validate = (formValues) => {\n    const error = {};\n\n    if(!formValues.Title){\n        error.Title = 'Please Enter a title';\n    }\n\n    if(!formValues.Description){\n        error.Description = 'Please Enter a description';\n    }\n\n    if(!formValues.Status){\n        error.Status = 'Please E'\n    }\n\n}\n\nexport default reduxForm({\n    form : 'CreatePost'\n})(CreatePost);"]},"metadata":{},"sourceType":"module"}