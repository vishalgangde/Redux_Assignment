{"ast":null,"code":"import _regeneratorRuntime from \"/home/vishal/userposts/node_modules/@babel/runtime/regenerator\";\nimport _objectSpread from \"/home/vishal/userposts/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _asyncToGenerator from \"/home/vishal/userposts/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport posts from '../apis/posts';\nimport post1 from '../apis/post1';\nimport history from '../history';\nimport { SIGN_OUT, POST_LIST, SINGLE_POST_LIST, //UPDATE_USER,\nCREATE_POST, EDIT_POST, DELETE_POST } from './types'; //import history from '../history';\n\nimport { toastr } from 'react-redux-toastr'; //const toastrSuccessFunction = (title,msg) => toastr.success(title,msg)\n//const toastrWarningFunction = (title,msg) => toastr.error(title,msg) \n\nexport var signInAction = function signInAction(formValues) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(dispatch) {\n        var _response;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                console.log(formValues);\n                _context.prev = 1;\n                _context.next = 4;\n                return posts.post('/jwt-auth/v1/token', _objectSpread({}, formValues));\n\n              case 4:\n                _response = _context.sent;\n                console.log(_response);\n                localStorage.setItem(\"authToken\", _response.data.token);\n                localStorage.setItem(\"displayname\", _response.data.user_display_name);\n                localStorage.setItem(\"userId\", _response.data.user_id);\n                console.log('renderAdminList', localStorage.getItem('userId'));\n                console.log(localStorage.getItem('userId'));\n                toastr.success(\"SignIn Successfully\", \"\".concat(formValues.username));\n                history.push('/');\n                _context.next = 19;\n                break;\n\n              case 15:\n                _context.prev = 15;\n                _context.t0 = _context[\"catch\"](1);\n                console.log('renderAdminList', localStorage.getItem('userId'));\n                toastr.error(\"WARNING!!!Please Try Again\", \"\".concat(formValues.username)); //toastrSuccessFunction(`SignIn Successful`,`${formValues.username}`)\n\n              case 19:\n                if (!(response.data.token === true)) {\n                  _context.next = 23;\n                  break;\n                }\n\n                return _context.abrupt(\"return\", \"Sign in \");\n\n              case 23:\n                if (!(response.data.token !== true && !user_id)) {\n                  _context.next = 25;\n                  break;\n                }\n\n                return _context.abrupt(\"return\", \"Sign out\");\n\n              case 25:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[1, 15]]);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }()\n  );\n}; //log out action creator with local storage and toaster\n\nexport var signOutAction = function signOutAction() {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(dispatch) {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return posts.post('/jwt-auth/v1/token', _objectSpread({}, formValues));\n\n              case 2:\n                response = _context2.sent;\n                console.log(response);\n                localStorage.removeItem(\"authToken\");\n                console.log(\"aaaaa\", localStorage.removeItem('authToken'));\n                localStorage.removeItem(\"displayname\");\n                console.log(\"aaaaaa\", localStorage.removeItem('displayname'));\n                localStorage.setItem(\"userId\", response.data.user_id);\n\n              case 9:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function (_x2) {\n        return _ref2.apply(this, arguments);\n      };\n    }()\n  );\n}; //registration action creator with api calling with post method\n\nexport var RegisterUserAction = function RegisterUserAction(formValues) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref3 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3(dispatch) {\n        var _response2;\n\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                console.log(formValues);\n                _context3.prev = 1;\n                _context3.next = 4;\n                return posts.post('/wp/v2/users/register', _objectSpread({}, formValues));\n\n              case 4:\n                _response2 = _context3.sent;\n                //toastrSuccessFunction(`${response.data.message}`,`${formValues.username}`)\n                console.log(_response2.data, 'RegisterUser');\n                toastr.success(\"SignIn Successfully\", \"\".concat(formValues.username));\n                history.push('/user/signin');\n                _context3.next = 13;\n                break;\n\n              case 10:\n                _context3.prev = 10;\n                _context3.t0 = _context3[\"catch\"](1);\n                toastr.error(\"WARNING!!!Please Try Again\", \"\".concat(formValues.username)); //toastrWarningFunction(`Registeration Failed`,`${formValues.username}`);\n\n              case 13:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, null, [[1, 10]]);\n      }));\n\n      return function (_x3) {\n        return _ref3.apply(this, arguments);\n      };\n    }()\n  );\n}; //post-create action creator with post method \n\nexport var createPostAction = function createPostAction(formValues) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref4 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee4(dispatch, getState) {\n        var _response3;\n\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.prev = 0;\n                _context4.next = 3;\n                return post1.post('/wp/v2/posts', _objectSpread({}, formValues));\n\n              case 3:\n                _response3 = _context4.sent;\n                console.log(_response3);\n                dispatch({\n                  type: CREATE_POST,\n                  payload: _response3.data\n                });\n                toastr.success(\"Create Post Successfully\", \"\".concat(formValues.username));\n                history.push('/');\n                _context4.next = 13;\n                break;\n\n              case 10:\n                _context4.prev = 10;\n                _context4.t0 = _context4[\"catch\"](0);\n                toastr.error(\"WARNING!!!Please Try Again\", \"\".concat(formValues.username));\n\n              case 13:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, null, [[0, 10]]);\n      }));\n\n      return function (_x4, _x5) {\n        return _ref4.apply(this, arguments);\n      };\n    }()\n  );\n}; //list of all post action creator with get method \n\nexport var postListAction = function postListAction() {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref5 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee5(dispatch) {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.next = 2;\n                return posts.get('/wp/v2/posts');\n\n              case 2:\n                response = _context5.sent;\n                console.log(\"postList data\", response.data);\n                dispatch({\n                  type: POST_LIST,\n                  payload: response.data\n                });\n\n              case 5:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5);\n      }));\n\n      return function (_x6) {\n        return _ref5.apply(this, arguments);\n      };\n    }()\n  );\n}; //single post action creator with get method\n\nexport var SinglePostListAction = function SinglePostListAction(id) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref6 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee6(dispatch) {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                _context6.next = 2;\n                return post1.get(\"/wp/v2/posts/\".concat(id));\n\n              case 2:\n                response = _context6.sent;\n                console.log(response);\n                dispatch({\n                  type: SINGLE_POST_LIST,\n                  payload: response.data\n                });\n\n              case 5:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6);\n      }));\n\n      return function (_x7) {\n        return _ref6.apply(this, arguments);\n      };\n    }()\n  );\n}; //edit-post action creator with put method \n\nexport var editPostAction = function editPostAction(id, formValues) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref7 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee7(dispatch) {\n        var _response4;\n\n        return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                _context7.prev = 0;\n                _context7.next = 3;\n                return post1.put(\"/wp/v2/posts/\".concat(id, \" \"), _objectSpread({}, formValues));\n\n              case 3:\n                _response4 = _context7.sent;\n                console.log(\"EditPost\", _response4);\n                dispatch({\n                  type: EDIT_POST,\n                  payload: _response4.data\n                });\n                toastr.success(\"Edit Post Successfully\", \"\".concat(formValues.username));\n                history.push('/');\n                _context7.next = 13;\n                break;\n\n              case 10:\n                _context7.prev = 10;\n                _context7.t0 = _context7[\"catch\"](0);\n                toastr.error(\"WARNING!!!Please Try Again\", \"\".concat(formValues.username));\n\n              case 13:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, null, [[0, 10]]);\n      }));\n\n      return function (_x8) {\n        return _ref7.apply(this, arguments);\n      };\n    }()\n  );\n}; //delete-post action creator with delete method \n\nexport var deletePostAction = function deletePostAction(id) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref8 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee8(dispatch) {\n        var _response5;\n\n        return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                _context8.prev = 0;\n                _context8.next = 3;\n                return post1.delete(\"/wp/v2/posts/\".concat(id));\n\n              case 3:\n                _response5 = _context8.sent;\n                console.log(\"DeletePostid\", _response5);\n                dispatch({\n                  type: DELETE_POST,\n                  payload: id\n                });\n                toastr.success(\"Delete Post Successfully\", \"\".concat(id));\n                history.push('/');\n                _context8.next = 13;\n                break;\n\n              case 10:\n                _context8.prev = 10;\n                _context8.t0 = _context8[\"catch\"](0);\n                toastr.error(\"WARNING!!!Please Try Again\", \"\".concat(id));\n\n              case 13:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8, null, [[0, 10]]);\n      }));\n\n      return function (_x9) {\n        return _ref8.apply(this, arguments);\n      };\n    }()\n  );\n};\n/*export const userUpdateAction = (id,formValue) => async (dispatch) => {\n            const response = await posts.put(`/wp/v2/users/${id}`,{...formValue});\n            console.log(\"userUpdateAction\",response);\n            dispatch({type: UPDATE_USER, payload : id});\n};*/","map":{"version":3,"sources":["/home/vishal/userposts/src/actions/index.js"],"names":["posts","post1","history","SIGN_OUT","POST_LIST","SINGLE_POST_LIST","CREATE_POST","EDIT_POST","DELETE_POST","toastr","signInAction","formValues","dispatch","console","log","post","response","localStorage","setItem","data","token","user_display_name","user_id","getItem","success","username","push","error","signOutAction","removeItem","RegisterUserAction","createPostAction","getState","type","payload","postListAction","get","SinglePostListAction","id","editPostAction","put","deletePostAction","delete"],"mappings":"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","sourcesContent":["import posts from '../apis/posts';\nimport post1 from '../apis/post1';\nimport history from '../history' \n\n\nimport {\n    SIGN_OUT,\n    POST_LIST,\n    SINGLE_POST_LIST,\n    //UPDATE_USER,\n    CREATE_POST,\n    EDIT_POST,\n    DELETE_POST,\n    \n} from './types'\n//import history from '../history';\nimport {toastr} from 'react-redux-toastr';\n\n//const toastrSuccessFunction = (title,msg) => toastr.success(title,msg)\n//const toastrWarningFunction = (title,msg) => toastr.error(title,msg) \n\n\n\nexport const signInAction = (formValues) => async (dispatch) => {\n    console.log(formValues)\n\n        try{\n            //sign api calling with post method also use local storage and toaster\n            const response  = await posts.post('/jwt-auth/v1/token',{...formValues});\n            console.log(response);\n            \n            localStorage.setItem(\"authToken\",response.data.token);\n            localStorage.setItem(\"displayname\",response.data.user_display_name);\n            localStorage.setItem(\"userId\",response.data.user_id);\n            console.log('renderAdminList',localStorage.getItem('userId'));\n            console.log(localStorage.getItem('userId'));\n            \n            toastr.success(`SignIn Successfully`,`${formValues.username}`)\n            history.push('/');\n        \n        }\n        catch(error){\n            console.log('renderAdminList',localStorage.getItem('userId'));\n            toastr.error(`WARNING!!!Please Try Again`,`${formValues.username}`)\n            //toastrSuccessFunction(`SignIn Successful`,`${formValues.username}`)\n        }\n\n        if(response.data.token === true){\n            return (`Sign in `);\n        }\n        else if(response.data.token !== true && !user_id){\n            return(`Sign out`);\n        }\n}\n       \n      \n      \n//log out action creator with local storage and toaster\nexport const signOutAction = () => async (dispatch) =>  {\n    \n    const response  = await posts.post('/jwt-auth/v1/token',{...formValues});\n    console.log(response);\n    \n    localStorage.removeItem(\"authToken\");\n    console.log(\"aaaaa\",localStorage.removeItem('authToken'));\n    \n    localStorage.removeItem(\"displayname\");\n    console.log(\"aaaaaa\",localStorage.removeItem('displayname'));\n\n    localStorage.setItem(\"userId\",response.data.user_id);\n    \n    };\n\n//registration action creator with api calling with post method\nexport const RegisterUserAction = formValues => async (dispatch) => {\n    console.log(formValues)\n        try{\n            const response = await posts.post('/wp/v2/users/register',{ ...formValues } );\n            //toastrSuccessFunction(`${response.data.message}`,`${formValues.username}`)\n            console.log(response.data,'RegisterUser');\n            toastr.success(`SignIn Successfully`,`${formValues.username}`)\n            history.push('/user/signin');\n        }\n    \n\n        catch(error){\n            toastr.error(`WARNING!!!Please Try Again`,`${formValues.username}`)\n            //toastrWarningFunction(`Registeration Failed`,`${formValues.username}`);\n        }\n\n};\n\n//post-create action creator with post method \nexport const createPostAction = formValues => async (dispatch,getState) => {\n    try{\n    //{user_id} = getState.data()\n            const response = await post1.post('/wp/v2/posts', { ...formValues });\n            console.log(response);\n            dispatch({ type: CREATE_POST, payload: response.data });\n            toastr.success(`Create Post Successfully`,`${formValues.username}`)\n            history.push('/');\n    }\n    catch(error){\n        toastr.error(`WARNING!!!Please Try Again`,`${formValues.username}`)\n    }\n};\n\n\n//list of all post action creator with get method \nexport const postListAction = () => async (dispatch) => {\n    //console.log(header)\n            const response = await posts.get('/wp/v2/posts');\n            console.log(\"postList data\",response.data);\n            dispatch({ type: POST_LIST, payload: response.data });\n};\n\n\n //single post action creator with get method\nexport const SinglePostListAction = id => async (dispatch) => {\n            const response = await post1.get(`/wp/v2/posts/${id}`);\n            console.log(response);\n            dispatch({type: SINGLE_POST_LIST, payload: response.data});\n}; \n\n\n//edit-post action creator with put method \nexport const editPostAction = (id,formValues) => async (dispatch) => {\n    try{\n            const response = await post1.put(`/wp/v2/posts/${id} `,{...formValues});\n            console.log(\"EditPost\",response);\n            dispatch({ type: EDIT_POST, payload: response.data });\n            toastr.success(`Edit Post Successfully`,`${formValues.username}`)\n            history.push('/');\n    }\n\n    catch(error){\n        toastr.error(`WARNING!!!Please Try Again`,`${formValues.username}`)\n    }\n};\n\n\n//delete-post action creator with delete method \nexport const deletePostAction = (id) => async (dispatch) => {\n    try{\n            const response = await post1.delete(`/wp/v2/posts/${id}`);\n            console.log(\"DeletePostid\",response);\n            dispatch({ type: DELETE_POST, payload: id });\n            toastr.success(`Delete Post Successfully`,`${id}`)\n            history.push('/');\n    }\n\n    catch(error){\n        toastr.error(`WARNING!!!Please Try Again`,`${id}`)\n    }\n};\n\n\n/*export const userUpdateAction = (id,formValue) => async (dispatch) => {\n            const response = await posts.put(`/wp/v2/users/${id}`,{...formValue});\n            console.log(\"userUpdateAction\",response);\n            dispatch({type: UPDATE_USER, payload : id});\n};*/\n\n\n"]},"metadata":{},"sourceType":"module"}