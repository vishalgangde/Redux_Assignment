{"ast":null,"code":"/*import React from 'react';\nimport { connect } from 'react-redux';\nimport { signInAction,signOutAction} from '../src/actions/index';\n\nclass GoogleAuth extends React.Component{\n\n    state = {user_id : null};\n\n    /*componentDidMount(){\n        window.gapi.load('client:auth2', () => {\n            window.gapi.client.init({\n                clientId:'930263169550-9177sdnu80f6k3ppgh1iomuncjsfn3fu.apps.googleusercontent.com',\n                scope:'email' \n            }).then(() => {\n                this.auth = window.gapi.auth2.getAuthInstance();\n                this.onAuthChange(this.auth.isSignedIn.get());\n\n\n\n                this.auth.isSignedIn.listen(this.onAuthChange);\n            });\n        });\n    }\n\n    onAuthChange = (isSignedIn) =>{\n       if(isSignedIn){\n           this.props.signInAction(this.data.token);\n       }\n       else{\n           this.props.signOutAction();\n       }\n    };\n\n    onSignInClick = (id) => {\n        this.props.signInAction(id);\n    };\n\n    onSignOutClick = () => {\n        this.props.signOutAction();\n    };  \n\n\n    renderAuthButton(){\n        if(this.props.formValue=== null){\n            return null;\n        }\n        else if(this.props.formValue){\n            return (\n                <button onClick={this.onSignOutClick} className=\"ui red button\">\n                    <i className=\" icon\" />\n                    Sign Out\n                </button>\n            );\n        }\n        else {\n            return(\n                <button onClick={this.onSignInClick} className=\"ui red  button\">\n                    <i className=\" icon\" />\n                    Sign In \n                    </button>\n            );\n        }\n    }\n\n    render(){\n        return<div>{this.renderAuthButton()}</div>;\n    }\n}\n\n/*const mapStateToProps = (state,ownProps) => {\n    return{ isSignedIn : state.isSignedIn[ownProps.data.user_id]};\n}\n\nexport default connect (null,{signInAction,signOutAction})(GoogleAuth);*/","map":{"version":3,"sources":["/home/vishal/userposts/src/GoogleAuth.js"],"names":[],"mappings":"AAAA","sourcesContent":["/*import React from 'react';\nimport { connect } from 'react-redux';\nimport { signInAction,signOutAction} from '../src/actions/index';\n\nclass GoogleAuth extends React.Component{\n\n    state = {user_id : null};\n\n    /*componentDidMount(){\n        window.gapi.load('client:auth2', () => {\n            window.gapi.client.init({\n                clientId:'930263169550-9177sdnu80f6k3ppgh1iomuncjsfn3fu.apps.googleusercontent.com',\n                scope:'email' \n            }).then(() => {\n                this.auth = window.gapi.auth2.getAuthInstance();\n                this.onAuthChange(this.auth.isSignedIn.get());\n\n\n\n                this.auth.isSignedIn.listen(this.onAuthChange);\n            });\n        });\n    }\n\n    onAuthChange = (isSignedIn) =>{\n       if(isSignedIn){\n           this.props.signInAction(this.data.token);\n       }\n       else{\n           this.props.signOutAction();\n       }\n    };\n\n    onSignInClick = (id) => {\n        this.props.signInAction(id);\n    };\n\n    onSignOutClick = () => {\n        this.props.signOutAction();\n    };  \n\n\n    renderAuthButton(){\n        if(this.props.formValue=== null){\n            return null;\n        }\n        else if(this.props.formValue){\n            return (\n                <button onClick={this.onSignOutClick} className=\"ui red button\">\n                    <i className=\" icon\" />\n                    Sign Out\n                </button>\n            );\n        }\n        else {\n            return(\n                <button onClick={this.onSignInClick} className=\"ui red  button\">\n                    <i className=\" icon\" />\n                    Sign In \n                    </button>\n            );\n        }\n    }\n\n    render(){\n        return<div>{this.renderAuthButton()}</div>;\n    }\n}\n\n/*const mapStateToProps = (state,ownProps) => {\n    return{ isSignedIn : state.isSignedIn[ownProps.data.user_id]};\n}\n\nexport default connect (null,{signInAction,signOutAction})(GoogleAuth);*/"]},"metadata":{},"sourceType":"module"}