{"ast":null,"code":"import _classCallCheck from \"/home/vishal/userposts/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/vishal/userposts/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/vishal/userposts/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/vishal/userposts/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/vishal/userposts/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/vishal/userposts/src/components/CreatePost.js\";\nimport React from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport { connect } from 'http2';\n\nvar CreatePost =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(CreatePost, _React$Component);\n\n  function CreatePost() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CreatePost);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CreatePost)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.renderInput = function (_ref) {\n      var input = _ref.input,\n          label = _ref.label,\n          meta = _ref.meta;\n      var className = \"field \".concat(meta.error && meta.touched ? 'error' : '');\n      console.log(meta);\n      return React.createElement(\"div\", {\n        className: className,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, label), React.createElement(\"input\", Object.assign({}, input, {\n        autoComplete: \"off\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      })), _this.renderError(meta));\n    };\n\n    return _this;\n  }\n\n  _createClass(CreatePost, [{\n    key: \"renderError\",\n    value: function renderError(_ref2) {\n      var touched = _ref2.touched,\n          error = _ref2.error;\n\n      if (touched && error) {\n        return React.createElement(\"div\", {\n          className: \"ui error message\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 10\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"header\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 11\n          },\n          __self: this\n        }, error));\n      }\n    }\n  }, {\n    key: \"onSubmit\",\n    value: function onSubmit(formValues) {\n      console.log(formValues);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      console.log(this.props);\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, \"Create Post\"), React.createElement(\"form\", {\n        onSubmit: this.props.handleSubmit(this.onSubmit),\n        className: \"ui form error\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(Field, {\n        inputType: \"text\",\n        name: \"Title\",\n        component: this.renderInput,\n        label: \"Enter Title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }), React.createElement(Field, {\n        inputType: \"text\",\n        name: \"Description\",\n        component: this.renderInput,\n        label: \"Enter Description\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }), React.createElement(Field, {\n        inputType: \"text\",\n        name: \"Status\",\n        component: this.renderInput,\n        label: \"Status\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        className: \"ui button primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, \"Submit\")));\n    }\n  }]);\n\n  return CreatePost;\n}(React.Component);\n\nvar validate = function validate(formValues) {\n  var error = {};\n\n  if (!formValues.Title) {\n    error.Title = 'Please Enter a title';\n  }\n\n  if (!formValues.Description) {\n    error.Description = 'Please Enter a description';\n  }\n\n  if (!formValues.Status) {\n    error.Status = 'Please Enter a Status';\n  }\n\n  return error;\n};\n\nvar Wrapped = reduxForm({\n  form: 'CreatePost',\n  validate: validate\n})(CreatePost);\nexport default connect()();","map":{"version":3,"sources":["/home/vishal/userposts/src/components/CreatePost.js"],"names":["React","Field","reduxForm","connect","CreatePost","renderInput","input","label","meta","className","error","touched","console","log","renderError","formValues","props","handleSubmit","onSubmit","Component","validate","Title","Description","Status","Wrapped","form"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Field,reduxForm} from 'redux-form';\nimport { connect } from 'http2';\n\nclass CreatePost extends React.Component{\n\n    renderError({touched,error}){\n        if(touched && error){\n            return(\n                <div className=\"ui error message\">\n                    <div className=\"header\">{error}</div>\n                </div>\n            );\n        }\n    }\n\n    renderInput = ({input,label,meta}) => {\n        const className = `field ${meta.error && meta.touched ? 'error' : ''}`;\n        console.log(meta);\n        \n        return(\n                <div className={className}>\n                    <label>{label}</label>\n                    <input {...input}  autoComplete=\"off\" />\n                    {this.renderError(meta)}\n            </div>\n        );\n        \n    }\n\n    onSubmit(formValues){\n        console.log(formValues);\n        \n    }\n\n    render(){\n        console.log(this.props);\n        return(\n            <div>\n                <h2>Create Post</h2 >\n            <form onSubmit={this.props.handleSubmit(this.onSubmit)} className=\"ui form error\">\n                <Field inputType=\"text\" name=\"Title\" component={this.renderInput} label=\"Enter Title\" />\n                <Field inputType=\"text\" name=\"Description\" component={this.renderInput} label=\"Enter Description\" />\n                <Field inputType=\"text\" name=\"Status\" component={this.renderInput} label=\"Status\" />\n                <button className=\"ui button primary\">Submit</button>\n            </form>\n            </div>\n            \n        );\n    }\n}\n\nconst validate = (formValues) => {\n    const error = {};\n\n    if(!formValues.Title){\n        error.Title = 'Please Enter a title';\n    }\n\n    if(!formValues.Description){\n        error.Description = 'Please Enter a description';\n    }\n\n    if(!formValues.Status){\n        error.Status = 'Please Enter a Status';\n    }\n\n    return error;\n\n}\n\nconst Wrapped = reduxForm({\n    form : 'CreatePost',\n    validate:validate\n})(CreatePost);\n\nexport default connect()()"]},"metadata":{},"sourceType":"module"}