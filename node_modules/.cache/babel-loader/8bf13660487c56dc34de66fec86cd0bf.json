{"ast":null,"code":"import _classCallCheck from \"/home/vishal/userposts/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/vishal/userposts/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/vishal/userposts/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/vishal/userposts/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/vishal/userposts/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/vishal/userposts/src/components/user/SignIn.js\";\nimport React from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport { signIn } from '../../actions/index';\nimport { connect } from 'react-redux';\n\nvar SignIn =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(SignIn, _React$Component);\n\n  function SignIn() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, SignIn);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(SignIn)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.renderInput = function (_ref) {\n      var input = _ref.input,\n          type = _ref.type,\n          label = _ref.label,\n          meta = _ref.meta;\n      var className = \"field \".concat(meta.error && meta.touched ? 'error' : '');\n      return React.createElement(\"div\", {\n        className: className,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, label), React.createElement(\"input\", Object.assign({}, input, {\n        type: type,\n        autoComplete: \"off\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      })), _this.renderError(meta));\n    };\n\n    _this.onSubmit = function (formValues) {\n      formValues = _.omit(form);\n\n      _this.props.signIn(formValues); //console.log('onSubmit', callback);\n\n    };\n\n    return _this;\n  }\n\n  _createClass(SignIn, [{\n    key: \"renderError\",\n    value: function renderError(_ref2) {\n      var touched = _ref2.touched,\n          error = _ref2.error;\n\n      //console.log({error});\n      //console.log({touched})\n      if (touched && error) {\n        return React.createElement(\"div\", {\n          className: \"ui error message\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 13\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"header\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 14\n          },\n          __self: this\n        }, error));\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      //console.log(this.props);\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, \"Log-in Here\"), React.createElement(\"form\", {\n        onSubmit: this.props.handleSubmit(this.onSubmit),\n        className: \"ui form error\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(Field, {\n        name: \"username\",\n        type: \"text\",\n        component: this.renderInput,\n        label: \"UserName\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }), React.createElement(Field, {\n        name: \"password\",\n        type: \"password\",\n        component: this.renderInput,\n        label: \"Password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        className: \"ui button primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, \"Submit\")));\n    }\n  }]);\n\n  return SignIn;\n}(React.Component);\n\nvar validate = function validate(formValues) {\n  var errors = {};\n\n  if (!formValues.username) {\n    errors.username = 'Must enter valid user name';\n  }\n  /*else if (formValues.username.length < 15) {\n      errors.username = 'Must be 15 characters or less'\n  }*/\n\n\n  if (!formValues.password) {\n    errors.password = 'Required';\n  }\n\n  if (!formValues.cfm_password) {\n    errors.cfm_password = 'Required';\n  }\n  /*else if (formValues.cfm_password !== formValues.password) {\n    errors.cfm_password = 'Password mismatched';\n  }*/\n\n\n  return errors;\n};\n\nvar logVal = reduxForm({\n  form: 'SignIn',\n  validate: validate\n})(SignIn);\nexport default connect(null, {\n  signIn: signIn\n})(logVal);","map":{"version":3,"sources":["/home/vishal/userposts/src/components/user/SignIn.js"],"names":["React","Field","reduxForm","signIn","connect","SignIn","renderInput","input","type","label","meta","className","error","touched","renderError","onSubmit","formValues","_","omit","form","props","handleSubmit","Component","validate","errors","username","password","cfm_password","logVal"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport { signIn } from '../../actions/index';\nimport { connect } from 'react-redux';\n\nclass SignIn extends React.Component {\n    renderError({ touched, error }) {\n        //console.log({error});\n        //console.log({touched})\n\n        if (touched && error) {\n            return (\n                <div className=\"ui error message\">\n                    <div className=\"header\">{error}</div>\n                </div>\n            );\n        }\n    }\n\n    renderInput = ({ input, type, label, meta }) => {\n        const className = `field ${meta.error && meta.touched ? 'error' : ''}`;\n\n        return (\n            <div className={className}>\n                <label>{label}</label>\n                <input {...input} type={type} autoComplete=\"off\" />\n                {this.renderError(meta)}\n            </div>\n        );\n\n    }\n\n    onSubmit = (formValues) => {\n        formValues = _.omit(form)\n        this.props.signIn(formValues)\n        //console.log('onSubmit', callback);\n    }\n\n\n\nrender() {\n    //console.log(this.props);\n    return (\n        <div>\n            <h2>Log-in Here</h2 >\n            <form onSubmit={this.props.handleSubmit(this.onSubmit)} className=\"ui form error\">\n                <Field\n                    name=\"username\"\n                    type=\"text\"\n                    component={this.renderInput}\n                    label=\"UserName\"\n                />\n                <Field\n                    name=\"password\"\n                    type=\"password\"\n                    component={this.renderInput}\n                    label=\"Password\"\n                />\n                <button className=\"ui button primary\">Submit</button>\n            </form>\n        </div>\n\n    );\n}\n}\n\nconst validate = (formValues) => {\n    const errors = {};\n\n    if (!formValues.username) {\n        errors.username = 'Must enter valid user name';\n    }\n    /*else if (formValues.username.length < 15) {\n        errors.username = 'Must be 15 characters or less'\n    }*/\n\n    if (!formValues.password) {\n        errors.password = 'Required';\n    }\n    if (!formValues.cfm_password) {\n        errors.cfm_password = 'Required';\n    } /*else if (formValues.cfm_password !== formValues.password) {\n        errors.cfm_password = 'Password mismatched';\n    }*/\n    return errors;\n\n}\nconst logVal = reduxForm({\n    form: 'SignIn',\n    validate\n})(SignIn);\n\nexport default connect(null, { signIn })(logVal);"]},"metadata":{},"sourceType":"module"}